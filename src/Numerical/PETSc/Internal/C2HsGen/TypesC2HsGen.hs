-- GENERATED by C->Haskell Compiler, version 0.27.1 Eternal Sunshine, 29 November 2015 (Haskell)
-- Edit the ORIGNAL .chs file instead!


{-# LINE 1 "/Users/ocramz/Dropbox/RESEARCH/Haskell/petsc-hs/src/Numerical/PETSc/Internal/C2HsGen/TypesC2HsGen.chs" #-}
{-# LANGUAGE ForeignFunctionInterface#-}

module Numerical.PETSc.Internal.C2HsGen.TypesC2HsGen where
import qualified Foreign.C.Types as C2HSImp


import  Numerical.PETSc.Internal.Utils  
import  Foreign  
import qualified Foreign.C.Types as CT 
import  Foreign.Storable  













-- | Type synonyms 

type PetscScalar_ = (C2HSImp.CDouble)
{-# LINE 23 "/Users/ocramz/Dropbox/RESEARCH/Haskell/petsc-hs/src/Numerical/PETSc/Internal/C2HsGen/TypesC2HsGen.chs" #-}

type PetscReal_ = (C2HSImp.CDouble)
{-# LINE 24 "/Users/ocramz/Dropbox/RESEARCH/Haskell/petsc-hs/src/Numerical/PETSc/Internal/C2HsGen/TypesC2HsGen.chs" #-}

-- | Enumeration types 

data DMBoundaryType_ = DmBoundaryNone
                     | DmBoundaryGhosted
                     | DmBoundaryMirror
                     | DmBoundaryPeriodic
                     | DmBoundaryTwist
  deriving (Enum,Eq,Show)

{-# LINE 27 "/Users/ocramz/Dropbox/RESEARCH/Haskell/petsc-hs/src/Numerical/PETSc/Internal/C2HsGen/TypesC2HsGen.chs" #-}

type DMBoundaryType = (C2HSImp.CInt)
{-# LINE 28 "/Users/ocramz/Dropbox/RESEARCH/Haskell/petsc-hs/src/Numerical/PETSc/Internal/C2HsGen/TypesC2HsGen.chs" #-}

dmBoundaryTypeToC :: DMBoundaryType_ -> DMBoundaryType
dmBoundaryTypeToC = CT.CInt . fromIntegral . fromEnum
dmBoundaryTypeFromC :: DMBoundaryType -> DMBoundaryType_
dmBoundaryTypeFromC = toEnum . fromIntegral

data DMDAStencilType_ = DmdaStencilStar
                      | DmdaStencilBox
  deriving (Enum,Eq,Show)

{-# LINE 34 "/Users/ocramz/Dropbox/RESEARCH/Haskell/petsc-hs/src/Numerical/PETSc/Internal/C2HsGen/TypesC2HsGen.chs" #-}

type DMDAStencilType = (C2HSImp.CInt)
{-# LINE 35 "/Users/ocramz/Dropbox/RESEARCH/Haskell/petsc-hs/src/Numerical/PETSc/Internal/C2HsGen/TypesC2HsGen.chs" #-}

dmdaStencilTypeToC :: DMDAStencilType_ -> DMDAStencilType
dmdaStencilTypeToC = CT.CInt . fromIntegral . fromEnum
dmdaStencilTypeFromC :: DMDAStencilType -> DMDAStencilType_
dmdaStencilTypeFromC = toEnum . fromIntegral

